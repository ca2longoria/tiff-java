import java.util.Scanner;

public class piece
{
	public static String controller;
	public static char body;
	public static int[] gameboardSize = new int[2];
	public static arrayWorks aw = new arrayWorks();
	public static String name;
	public static int speed;
	/* skills[int(speed)] */
	
	public int x;
	public int y;
	
	
	
	public piece(String theName, int x1, int y1, char b, int theSpeed, String c)
	{
		name = theName;
		controller = c;
		body = b;
		speed = theSpeed;
		x = x1;
		y = y1;
	}
	
	public void printPieceInfo(String it)
	{
		if (it.equals("name"))
			System.out.println(name);
		else if (it.equals("controller"))
			System.out.println(controller);
		else if (it.equals("body"))
			System.out.println(body);
		else if (it.equals("speed"))
			System.out.println(speed);
		else if (it.equals("x y"))
			System.out.println(x + " " + y);
	}
	
	// needs this in order to get the size of the board being played on.
	public void quickCheck(gameboard board)
	{
		gameboardSize = aw.copyIntArray(board.theSize);
	}
	
	public void move()
	{
		if (controller.equals("human"))
		{
			Scanner s = new Scanner(System.in);
			
			for (int i = 0; i < speed; i++)
			{
				String direction = "";
				int check = 0;
				while (check < 1)
				{
					System.out.println("Command " + (i + 1));
					direction = s.nextLine();
					if (	(direction.equals("up") && y != 0) ||
							(direction.equals("right") && x != gameboardSize[0] - 1) ||
							(direction.equals("down") && y != gameboardSize[1] - 1) ||
							(direction.equals("left") && x != 0) ||
							(direction.equals("skip")) ||
							(direction.equals("skip all")))
						check++;
					else
						System.out.println("Invalid Command...");
					//System.out.println(check + " " + direction);
				}
			
				if (direction.equals("up"))
					y--;
				else if (direction.equals("right"))
					x++;
				else if (direction.equals("down"))
					y++;
				else if (direction.equals("left"))
					x--;
				
				else if (direction.equals("skip all"))
					i = speed; // ends all command requests.
			}
		}
	}
	
	public char getChar()
	{
		return body;
	}
	
	public int getX()
	{
		return x;
	}
	
	public int getY()
	{
		return y;
	}

}
